replicaCount: 1
runAsUser: 0
serviceAccount:
  create: false
bootstrapScript: |
  #!/bin/bash
  rm -rf /var/lib/apt/lists/* && \
  pip install \
    mysqlclient==2.1.1 \
    redis==3.5.3 && \
  if [ ! -f ~/bootstrap ]; then echo "Running Superset with uid {{ .Values.runAsUser }}" > ~/bootstrap; fi

extraEnvRaw: 
  - name: DB_HOST
    value: mysql-terrier.terrier.svc.cluster.local
  - name: DB_PORT
    value: '3306'
  - name: DB_NAME
    value: terrier
  - name: DB_USER
    valueFrom:
      secretKeyRef:
        name: db-secret
        key: db-readonly-username
  - name: DB_PASS
    valueFrom:
      secretKeyRef:
        name: db-secret
        key: db-readonly-password

image:
  repository: apache/superset
  tag: latest
  pullPolicy: IfNotPresent
imagePullSecrets: []

service:
  type: ClusterIP
  port: 8088
  annotations: {}
  loadBalancerIP: null

ingress:
  enabled: false
supersetCeleryBeat:
  enabled: false

init:
  resources: {}
  command:
    - "/bin/sh"
    - "-c"
    - ". {{ .Values.configMountPath }}/superset_bootstrap.sh; . {{ .Values.configMountPath }}/superset_init.sh"
  enabled: true
  loadExamples: false
  createAdmin: true
  adminUser:
    username: admin
    firstname: Superset
    lastname: Admin
    email: admin@superset.com
    password: admin
  initContainers:
    - name: wait-for-mysql
      image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
      imagePullPolicy: "{{ .Values.initImage.pullPolicy }}"
      command: [ "/bin/sh", "-c", "until nc -zv $DB_HOST $DB_PORT -w1; do echo 'waiting for db'; sleep 1; done" ]
  initscript: |-
    #!/bin/sh
    set -eu
    echo "Upgrading DB schema..."
    superset db upgrade
    echo "Initializing roles..."
    superset init
    {{ if .Values.init.createAdmin }}
    echo "Creating admin user..."
    superset fab create-admin \
                    --username {{ .Values.init.adminUser.username }} \
                    --firstname {{ .Values.init.adminUser.firstname }} \
                    --lastname {{ .Values.init.adminUser.lastname }} \
                    --email {{ .Values.init.adminUser.email }} \
                    --password {{ .Values.init.adminUser.password }} \
                    || true
    {{- end }}
    {{ if .Values.init.loadExamples }}
    echo "Loading examples..."
    superset load_examples
    {{- end }}
    if [ -f "{{ .Values.extraConfigMountPath }}/import_datasources.yaml" ]; then
      echo "Importing database connections.... "
      superset import_datasources -p {{ .Values.extraConfigMountPath }}/import_datasources.yaml
    fi
  podAnnotations: {}
  podSecurityContext: {}
  containerSecurityContext: {}

postgresql:
  enabled: false
redis:
  enabled: false

